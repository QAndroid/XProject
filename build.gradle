//顶级的构建文件，你可以为所有的sub-projects/modules添加共同的配置选项
//buildscript中，声明的是gradle脚本自身需要使用的资源
buildscript {
    ext.kotlin_version = '1.3.50'

    // Define versions in a single place
    ext {
        // Sdk and tools
        compilesdk_version = 28
        minsdk_version = 21
        targetsdk_version = 28
        dalvik_minsdk_version = 21
        build_tools_version = '29.0.2'


        //Kotlin
        kotlin_version = '1.3.50'

        // App dependencies
        flexbox_verion = '1.0.0'
        gson_version = '2.8.5'
        retrofit_version = '2.4.0'
        converter_gson_version = '2.1.0'
        junit_version = '4.12'
        eventbus_version = '3.1.1'
        appcompat_version = '1.0.2'
        recyclerview_version = '1.0.0'
        runner_version = '1.1.0'
        espresso_core_version = '3.1.0'
        cardview_version = '1.0.0'
        material_version = '1.0.0'
        constraintlayout_version = '1.1.3'
        core_ktx_version = '1.0.2'
        arouter_api_version = '1.5.0'
        arouter_compiler_version = '1.2.2'
        room_version = '2.2.0-rc01'
        gson_version = '2.8.5'
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//subprojects配置所有子项目共同的配置
//参考：https://proandroiddev.com/reducing-boilerplate-in-gradle-multi-module-projects-2ff2dde5bf95
subprojects {
    //com.android.application和com.android.library必须放在和kotlin-android、kotlin-android-extensions之前
    //如果放在module的build.gradle中，会报错:Extension with name 'android' does not exist. Currently registered extension names: [ext, kotlin]
    if (project.name == 'app') {
        apply plugin: 'com.android.application'
    } else {
        apply plugin: 'com.android.library'
    }
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: "kotlin-kapt"

    android {
        compileSdkVersion rootProject.compilesdk_version
        buildToolsVersion rootProject.build_tools_version

        //签名配置，参考：https://developer.android.com/studio/publish/app-signing
        signingConfigs {
            //发布构建签名配置
            release {
                //密钥库文件，一个包含一组私钥的二进制文件，变量保存在gradle.properties中
                storeFile file(STOREFILE)
                //密钥库密码，变量保存在.bash_profile环境变量中，参考：
                //隐藏密码-https://www.jianshu.com/p/714ea34f739a
                //配置签名设置-https://developer.android.com/studio/build/build-variants
                storePassword System.getenv("KSTOREPWD")
                keyAlias = 'xproject'
                keyPassword System.getenv("KKEYPWD")

                //FIXME 为什么System.console()没有提示输入？？
                //if (System.console() != null)
                //  keyPassword System.console().readLine("\nKey password: ")
            }
        }

        defaultConfig {
            minSdkVersion rootProject.minsdk_version
            targetSdkVersion rootProject.targetsdk_version

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

            //ARouter：annotationProcesser会使用javaCompileOptions配置类获取当前module的名字
            //Kotlin有自己独有的kapt框架做apt相关操作，的报错-There is no route match the path [/xxx/xxx], in group [xxx][ ]"
            //参考：https://juejin.im/post/593e5084128fe1006af179ad
            kapt {
                arguments {
                    arg("AROUTER_MODULE_NAME", project.getName())
                }
            }
        }

        buildTypes {
            //发布构建类型:代码压缩（混淆），清单文件占位（App名称）
            release {
                //签名配置：使用发布构建签名
                signingConfig signingConfigs.release
            }

            //调试构建类型，仅包含需要的配置，不包含压缩、签名等，加快开发构建速度
            debug {
                //关闭代码压缩——代码压缩会拖慢构建速度，尽可能在调试构建中避免使用
                minifyEnabled false
                shrinkResources false

                debuggable true

                ext.enableCrashlytics = false
            }
        }
    }

    dependencies {
        //主源集依赖项
        implementation fileTree(dir: 'libs', include: ['*.jar'])

        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        //ARoter:替换成最新版本,需要注意的是api。要与compiler匹配使用，均使用最新版可以保证兼容
        //每个模块需要ARouter apt引用，不然无法在apt中生成索引文件，无法成功跳转
        //每个模块需要ARouter api引用，不然构建报错：ARouter::Compiler The user has configuration the module name, it was [eventbus]
        implementation "com.alibaba:arouter-api:$rootProject.arouter_api_version"
        kapt "com.alibaba:arouter-compiler:$rootProject.arouter_compiler_version"

        //本地测试源集依赖
        testImplementation "junit:junit:$rootProject.junit_version"
        //设备化测试源集依赖
        androidTestImplementation "androidx.test:runner:$rootProject.runner_version"
        androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso_core_version"
    }

    repositories {
        mavenCentral()
    }
}

//allprojects返回给Project对象以及其所有子项目
allprojects {
    repositories {
        google()
        jcenter()
    }
}
