//顶级的构建文件，你可以为所有的sub-projects/modules添加共同的配置选项
//buildscript中，声明的是gradle脚本自身需要使用的资源
buildscript {
    ext.kotlin_version = '1.3.50'

    //插件仓库配置
    repositories {
        google()
        jcenter()
    }

    //依赖插件
    dependencies {
        //Googled的Android Gradle插件
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.17'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//subprojects配置所有子项目共同的配置
//参考：https://proandroiddev.com/reducing-boilerplate-in-gradle-multi-module-projects-2ff2dde5bf95
subprojects {
    //已经使用common_build.gradle，闭包的方式，替代subprojects编写子模块公共类
}

//allprojects返回给Project对象以及其所有子项目
allprojects {
    //基础仓库配置
    repositories {
        google()
        jcenter()

        //本地aar仓库目录，组件构建完成后，将aar都copy在该目录
        //参考：https://stackoverflow.com/questions/16682847/how-to-manually-include-external-aar-package-using-new-gradle-android-build-syst
        flatDir {
            dirs '../libs'
        }
    }
}
